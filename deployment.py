# -*- coding: utf-8 -*-
"""deployment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/155AKfFd20w83wS5MRKOSw76B07FKlhmi
"""





import streamlit as st
import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

# File uploader widget
uploaded_file = st.file_uploader("results25_ordinalsize", type="csv")
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    df = df.drop(columns=['Unnamed: 0'], axis=1)  # Assuming 'Unnamed: 0' is an indexing column
    st.write("Data successfully loaded! Here are the first few entries:")
    st.dataframe(df.head())

    def assign_weights(sizes):
        # Map each size to an exponential weight
        weights = np.exp(sizes * 10)  # Scale by 10 to increase differentiation
        return weights

    def get_similar_products_with_weighted_sizes(prod_id, data, top_n=10):
        data['PROD_ID'] = data['PROD_ID'].astype(str)
        prod_id = str(prod_id)

        if prod_id not in data['PROD_ID'].values:
            st.error(f"Product ID {prod_id} not found in the data.")
            return pd.DataFrame()  # Return empty DataFrame to handle the error gracefully

        data_features = data.drop(columns=['PROD_DESC', 'DMDCTR_DESC', 'PROD_ID'])
        size_weights = assign_weights(data['SZ_CD_SDESC'])
        data_features['SZ_CD_SDESC'] *= size_weights

        target_index = data[data['PROD_ID'] == prod_id].index[0]
        target_features = data_features.iloc[[target_index]]

        similarities = cosine_similarity(target_features, data_features).flatten()
        similar_indices = np.argsort(similarities)[-top_n-1:-1][::-1]
        similar_products = data.iloc[similar_indices]
        return similar_products[['PROD_ID', 'PROD_DESC', 'DMDCTR_DESC']]

    prod_id_input = st.text_input("Enter Product ID to find similar products:")
    if st.button("Find Similar Products"):
        if prod_id_input:
            similar_products_rows = get_similar_products_with_weighted_sizes(prod_id_input, df)
            if not similar_products_rows.empty:
                st.write("Similar Products and their details:")
                st.dataframe(similar_products_rows)
            else:
                st.write("No similar products found. Please check the Product ID or try a different one.")









